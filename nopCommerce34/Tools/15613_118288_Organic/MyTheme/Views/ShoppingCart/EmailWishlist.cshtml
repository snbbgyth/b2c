@model WishlistEmailAFriendModel
@using Nop.Web.Models.ShoppingCart;
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.WishlistEmailAFriend").Text);
}
<div class="page email-a-friend-page">
    <div class="page-title">
        <h4 class="no-margin color-grn font-spr">@T("Wishlist.EmailAFriend.Title")</h4>
        <div class="underline-dased clearfix margin-t5">&nbsp;</div>
    </div>
    <div class="panel">
        <div class="page-body panel-body">
            @if (Model.SuccessfullySent)
            {
                <div class="result">
                    @Model.Result
                </div>
            }
            else
            {
                using (Html.BeginForm())
                {
                    <div class="message-error">
                        @Html.ValidationSummary(true)
                    </div>
    <div class="form-fields margin-t10">
        <div class="inputs-left">
            <div class="inputs row margin-b10">
                @Html.LabelFor(model => model.FriendEmail, new { @class = "col-sm-3 control-label"})
                <div class="col-sm-9">
                    @Html.TextBoxFor(model => model.FriendEmail, new { @class = "friend-email form-control no-br", placeholder = T("Wishlist.EmailAFriend.FriendEmail.Hint") })
                    @Html.ValidationMessageFor(model => model.FriendEmail)
                </div>
            </div>
            <div class="inputs row margin-b10">
                @Html.LabelFor(model => model.YourEmailAddress, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextBoxFor(model => model.YourEmailAddress, new { @class = "your-email form-control no-br", placeholder = T("Wishlist.EmailAFriend.YourEmailAddress.Hint") })
                    @Html.ValidationMessageFor(model => model.YourEmailAddress)
                </div>
                </div>
            @if (Model.DisplayCaptcha)
{
    <div class="captcha-box row margin-b10">
        @Html.Raw(Html.GenerateCaptcha())
    </div>
}
        </div>
        <div class="inputs-right">
            <div class="inputs row margin-b10">
                @Html.LabelFor(model => model.PersonalMessage, new { @class = "col-sm-3 control-label" })
                <div class="col-sm-9">
                    @Html.TextAreaFor(model => model.PersonalMessage, new { @class = "personal-message form-control no-br no-resize", placeholder = T("Wishlist.EmailAFriend.PersonalMessage.Hint") })
                    @Html.ValidationMessageFor(model => model.PersonalMessage)
                </div>
                </div>
        </div>
    </div>
    <div class="buttons row">
        <div class="col-sm-9 col-sm-offset-3">
            <button type="submit" name="send-email" class="button-1 send-email-a-friend-button btn no-br btn-success"><i class="fa fa-envelope-o"></i> @T("Wishlist.EmailAFriend.Button")</button>
            </div>
        </div>
                }
            }
        </div>
    </div>
</div>
